// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PanoramicData.Chunker.KnowledgeGraph.Storage;

#nullable disable

namespace PanoramicData.Chunker.KnowledgeGraph.Storage.Migrations
{
	[DbContext(typeof(KnowledgeGraphDbContext))]
	[Migration("20251028121912_InitialCreateWithApacheAge")]
	partial class InitialCreateWithApacheAge
	{
		/// <inheritdoc />
		protected override void BuildTargetModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
				.HasAnnotation("ProductVersion", "9.0.10")
				.HasAnnotation("Relational:MaxIdentifierLength", 63);

			NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

			modelBuilder.Entity("PanoramicData.Chunker.Models.KnowledgeGraph.Entity", b =>
				{
					b.Property<Guid>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("uuid");

					b.Property<string>("Aliases")
						.IsRequired()
						.HasColumnType("jsonb");

					b.Property<double>("Confidence")
						.HasColumnType("double precision");

					b.Property<int>("Frequency")
						.HasColumnType("integer");

					b.Property<string>("Metadata")
						.IsRequired()
						.HasColumnType("jsonb");

					b.Property<string>("Name")
						.IsRequired()
						.HasMaxLength(500)
						.HasColumnType("character varying(500)");

					b.Property<string>("NormalizedName")
						.IsRequired()
						.HasMaxLength(500)
						.HasColumnType("character varying(500)");

					b.Property<string>("Properties")
						.IsRequired()
						.HasColumnType("jsonb");

					b.Property<string>("RelatedEntityIds")
						.IsRequired()
						.HasColumnType("jsonb");

					b.Property<string>("Sources")
						.IsRequired()
						.HasColumnType("jsonb");

					b.Property<string>("Type")
						.IsRequired()
						.HasMaxLength(50)
						.HasColumnType("character varying(50)");

					b.HasKey("Id");

					b.HasIndex("Confidence")
						.HasDatabaseName("IX_KgEntities_Confidence");

					b.HasIndex("NormalizedName")
						.HasDatabaseName("IX_KgEntities_NormalizedName");

					b.HasIndex("Type")
						.HasDatabaseName("IX_KgEntities_Type");

					b.ToTable("KgEntities", (string)null);
				});

			modelBuilder.Entity("PanoramicData.Chunker.Models.KnowledgeGraph.Graph", b =>
				{
					b.Property<Guid>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("uuid");

					b.Property<string>("Metadata")
						.IsRequired()
						.HasColumnType("jsonb");

					b.Property<string>("Name")
						.IsRequired()
						.HasMaxLength(200)
						.HasColumnType("character varying(200)");

					b.Property<string>("Schema")
						.IsRequired()
						.HasColumnType("jsonb");

					b.Property<string>("Statistics")
						.IsRequired()
						.HasColumnType("jsonb");

					b.HasKey("Id");

					b.HasIndex("Name")
						.IsUnique()
						.HasDatabaseName("IX_KgGraphs_Name");

					b.ToTable("KgGraphs", (string)null);
				});

			modelBuilder.Entity("PanoramicData.Chunker.Models.KnowledgeGraph.Relationship", b =>
				{
					b.Property<Guid>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("uuid");

					b.Property<bool>("Bidirectional")
						.HasColumnType("boolean");

					b.Property<double>("Confidence")
						.HasColumnType("double precision");

					b.Property<string>("Evidence")
						.IsRequired()
						.HasColumnType("jsonb");

					b.Property<Guid>("FromEntityId")
						.HasColumnType("uuid");

					b.Property<string>("Metadata")
						.IsRequired()
						.HasColumnType("jsonb");

					b.Property<string>("Properties")
						.IsRequired()
						.HasColumnType("jsonb");

					b.Property<Guid>("ToEntityId")
						.HasColumnType("uuid");

					b.Property<string>("Type")
						.IsRequired()
						.HasMaxLength(50)
						.HasColumnType("character varying(50)");

					b.Property<double>("Weight")
						.HasColumnType("double precision");

					b.HasKey("Id");

					b.HasIndex("FromEntityId")
						.HasDatabaseName("IX_KgRelationships_FromEntity");

					b.HasIndex("ToEntityId")
						.HasDatabaseName("IX_KgRelationships_ToEntity");

					b.HasIndex("Type")
						.HasDatabaseName("IX_KgRelationships_Type");

					b.HasIndex("FromEntityId", "ToEntityId")
						.HasDatabaseName("IX_KgRelationships_FromTo");

					b.ToTable("KgRelationships", (string)null);
				});
#pragma warning restore 612, 618
		}
	}
}
